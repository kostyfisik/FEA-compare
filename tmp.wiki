{| class="wikitable sortable"
|-
! Feature
!code_aster
!PERMAS(R)
!COMSOL(R)
!MFEM
!GetFEM++
!Deal II
!Rama Simulator
!Elmerfem
!Range
!MOOSE
!FEniCS
!libMesh
!FEATool Multiphysics
!Firedrake
|-
| license:
| GPL
| Proprietary
| Proprietary
| BSD
| LGPL
| LGPL
| GPL
| GNU (L)GPL
| GPL
| LGPL
| GNU GPL\LGPL
| LGPL
| Proprietary
| GNU LGPL
|-
| GUI:
| Yes (Salome-Meca)
| Yes
| Yes
| No
| No
| No
| Yes
| Yes, partial functionality
| Yes
| Yes
| Postprocessing only
| No
| Matlab and Octave GUI
| No
|-
| Community:
| discussion forum, Bitbucket forge
| 
| 
| GitHub Repository
| Mailing list
| Google Group
| 
| 1000's of users, discussion forum, mailing list, Discord server
| GitHub
| Google Group
| Mailing list
| mail lists
| Mailing list
| Mailing list and IRC channel
|-
| Documentation:
| user manual, theory manual, verification manual, developer manual (more than 25000 pages both in French and English with machine translation)
| User guides, reference manuals, API documentation, application libraries with solved examples, online tutorials
| User guides, reference manuals, API documentation, application libraries with solved examples, online tutorials
| 26 examples, 17 miniapps, Doxygen, online documentation
| User doc, tutorials, demos, developer's guide
| 50+ tutorials, 50+ video lectures, Doxygen
| User guide, reference manual, API documentation, examples, tutorials
| ElmerSolver Manual, Elmer Models Manual, ElmerGUI Tutorials, etc. (>700 pages of LaTeX documentation available in PDFs)
| user manual, tutorials
| Doxygen, Markdown, 170+ example codes, 4300+ test inputs
| Tutorial, demos (how many?), 700-page book
| Doxygen, 100+ example codes
| Online FEATool documentation, ~600 pages, ~20 step-by-step tutorials, and 85 m-script model examples
| Manual, demos, API reference
|-
| colspan="100500" | '''Mesh''' 
|-
| mesh elements:
| segments (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)
| Intervals (1D); triangles, quadrilaterals (2D and 3D boundaries); tetrahedra, pyramids, prisms, hexahedra (3d)
| Intervals (1D); triangles, quadrilaterals (2D and 3D boundaries); tetrahedra, pyramids, prisms, hexahedra (3d)
| segments, triangles, quadrilaterals, tetrahedra, hexahedra, prisms
| intervals, triangles, tetrahedra, quads, hexes, prisms, some 4D elements, easily extensible.
| intervals (1d), quads (2d), and hexes (3d) only
| triangles
| intervals (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)
| points(0d), segments (1d), triangles, quadrilaterals (2d), tetrahedra, hexahedra (3d)
| Tria, Quad, Tetra, Prism, etc.
| intervals, triangles, tetrahedra (quads, hexes - work in progress)
| Tria, Quad, Tetra, Prism, etc.
| intervals, triangles, tetrahedra, quads, hexes
| intervals, triangles, tetrahedra, quads, plus extruded meshes of hexes and wedges
|-
| mesh high-order mapping:
| Quadratic
| Second order (Serendipity and Lagrange)
| Any?  Second-order is the default for most cases.
| arbitrary-order meshes and NURBS meshes
|
| any order
| No
| Yes, for Lagrange elements
|
|
| (Any - work in progress)
|
|
| (Any - using appropriate branches)
|-
| mesh generation:
| Yes (Salome-Meca)
| Built-in and external
| Built-in
| meshing miniapps and target-matrix mesh optimization
| Experimental in any dimension + predefined shapes + Extrusion.
| external+predefined shapes
| Built-in
| Limited own meshing capabilities with ElmerGrid and netgen/tetgen APIs. Internal extrusion and mesh multiplication on parallel level.
| Yes (TetGen)
| Built-in
| Yes, Constructive Solid Geometry (CSG) supported via mshr (CGAL and Tetgen used as backends)
| Built-in
| Integrated DistMesh, Gmsh, and Triangle GUI and CLI interfaces
| External + predefined shapes. Internal mesh extrusion operation.
|-
| mesh adaptive-refinement:
| h-refinement
| No; no p-refinement but several higher-order elements are included.
| Yes, full adaptive mesh refinement (h-refinement); no p-refinement but several higher-order elements are included. Mesh adaptation on the whole or parts of the geometry, for stationary, eigenvalue, and time-dependent simulations and by rebuilding the entire mesh or refining chosen mesh elements.
| conforming and non-conforming adaptive refinement for tensor product and simplex meshes
| Only h
| h, p, and hp for CG and DG
| No
| h-refinement for selected equations
|
| h, p, mached hp, singular hp
| Only h
| h, p, mached hp, singular hp
|
|
|-
| mesh input\output:
| unv, gmsh, MED, aster
| STL, ABAQUS, NASTRAN, NX (Dr.Binde), PATRAN, UNV, BIF/BOF, H3D, native format (i.e. .hdf, .post)
| STL, PLY, NASTRAN, 3MF, VRML (import only), native format
| VTK, Gmsh, CUBIT, NETGEN, TrueGrid, and MFEM format
| gmsh, GiD, Ansys
|
| Matlab
|
| rbm, stl
| ExodusII, Nemesis, Abaqus, Ensight, Gmsh, GMV, OFF, TecPlot TetGen, etc.
| XDMF (and FEniCS XML)
| ExodusII, Nemesis, Abaqus, Ensight, Gmsh, GMV, OFF, TecPlot TetGen, etc.
| FeatFlow, FEniCS XML, GiD, Gmsh, GMV, Triangle
|
|-
| mesh check:
| limited features (double nodes, degenerated elements)
| Avoids inverted and degenerated elements; various mesh quality measures
| Avoids inverted and degenerated elements; various mesh quality measures
|
| ?
|
| Avoids degenerate elements
|
| limited features (double nodes, degenerated elements, intersected elements)
|
| intersections (collision testing)
|
|
|
|-
| CAD files support:
| Yes (Salome-Meca)
| STL.
| STEP, IGES and many others.
|
| No
| IGES, STEP (with OpenCascade wrapper)
| DXF
| Limited support via OpenCASCADE in ElmerGUI
| Yes (stl)
|
|
|
|
|
|-
| mesh operation:
| Yes (Salome-Meca)
| Merge, copy; convert; extrude, revolve
| Merge, copy, refine; convert; boundary layers; extrude, revolve, sweep, loft for 3D geometies
|
| Extrude, rotate, translation, refine
|
| Union, difference, intersection, refine
|
| Extrude, rotate, translation, refine
| Merge, join, extrude, modular mesh modifier system
|
| distort/translate/rotate/scale
| Merge, join, extrude, and revolve operations
|
|-
| colspan="100500" | '''Parallel possibilities''' 
|-
| automatic mesh partitioning:
| Yes for parallel calculations (PTScotch, ParMetis)
| Task graph and mesh partitioning for DMP
|
| METIS and space-filling curve partitioning
| Yes (METIS)
| yes, shared (METIS/Parmetis) and distributed (p4est)
|
| partitioning with ElmerGrid using Metis or geometric division, internal partitioning in ElmerSolver using Zoltan
| No
| Metis, Parmetis, Hilbert (shared and distributed meshes)
| Yes (ParMETIS and SCOTCH)
| Metis, Parmetis, Hilbert
|
| Yes
|-
| MPI:
| Yes
| on request
| Almost ideal for parameter sweep? For large scale simulations  Comsol 4.2 bench by Pepper has 19.2 speedup on 24 core cluster (0.8 efficiency).
| Yes
| Yes
| Yes (up to 147k processes), test for 4k processes and geometric multigrid for 147k, strong and weak scaling
|
| Yes, demonstrated scalability up to 1000's of cores
| No
| Yes
| Yes, DOLFIN solver scales up to 24k
| Yes
|
| Yes, Scaling plot for Firedrake out to 24k cores.
|-
| threads:
| Yes
| Supports multithreading
| Supports multithreading
| Using OpenMP, RAJA, or OCCA backends
|
| Threading Build Blocks
| Supports multithreading
| threadsafe, some modules threaded and vectorized.
| Yes
| Yes
|
| Yes
|
|
|-
| OpenMP:
| Yes
| Yes
| Yes
| Yes
| Yes
| Yes (vectorization only)
| No
| Yes, partially
| Yes
| Yes
|
| Yes
|
| Limited
|-
| OpenCL:
| No
| No
| No
| Through OCCA backends
| No
| No
| No
| No
| No
|
|
|
|
|
|-
| CUDA:
| No
| Yes
| No
| Yes
| No
| since 9.1, see step-64 for matrix-free GPU+MPI example
| No
| Preliminary API for sparse linear algebra
| No
|
|
|
|
|
|-
| colspan="100500" | '''Solver''' 
|-
| Dimension:
| 0D/1D/2D/3D (dimensions may coexist)
| 0D, 1D, 2D, 3D (can coexist)
| 0D, 1D, 2D, 3D (can coexist)
| 1D/2D/3D
| Any, possibility to mix and couple problem of different dimension
| 1/2/3D
| 2D
| 1D/2D/3D (dimensions may coexist)
| 0D/1D/2D/3D (dimensions may coexist)
| 1/2/3D
| 1/2/3D
| 2D\3D
| 1/2/3D
| 1/2/3D
|-
| FE:
| Lagrange elements (isoparametric), mixed elements, structural mechanics elements (beam, plate)
| Lagrange (bubble,EAS, serendipity), beam and plate elements, control elements, RBC elements, Hermite
| Lagrange (order 1-7), Hermite (order 3-7), discontinuous Lagrange (order 0-7), bubble, Gauss point, serendipity, Nedelec
| Arbitrary-order Lagrange elements (continuous and discontinuous), Bernstein basis, Nedelec and Raviart-Thomas elements, support for NURBS spaces (IGA)
| Continuous and discontinuous Lagrange, Hermite, Argyris, Morley, Nedelec, Raviart-Thomas, composite elements (HCT, FVS), Hierarchical elements, Xfem, easily extensible.
| Lagrange elements of any order, continuous and discontinuous; Nedelec and Raviart-Thomas elements of any order; BDM and Bernstein; elements composed of other elements.
| Lagrange elements
| Lagrange elements, p-elements up to 10th order, Hcurl conforming elements (linear and quadratic) for
| Lagrange elements
| Lagrange, Hierarchic, Discontinuous Monomials, Nedelec
| Lagrange, BDM, RT, Nedelic, Crouzeix-Raviart, all simplex elements in the Periodic Table (femtable.org), any
| Lagrange, Hierarchic, Discontinuous Monomials, Nedelec
| Lagrange (1st-5th order), Crouzeix-Raviart, Hermite
| Lagrange, BDM, RT, Nedelec, all simplex elements and Q- quad elements in the Periodic Table, any
|-
| Quadrature:
| depending on the type of element (Gauss, Newton-Cotes, etc)
| Gauss-Legendre, Gauss-Lobatto and best element specific quadrature rules.
|
| Gauss-Legendre, Gauss-Lobatto, and uniform quadrature rules.
|
| Gauss-Legendre, Gauss-Lobatto, midpoint, trapezoidal,  Simpson, Milne and Weddle (closed Newton-Cotes for 4 and 7 order polinomials), Gauss quadrature with logarithmic or 1/R weighting function, Telles quadrature of arbitrary order.
|
|
|
| Gauss-Legendre (1D and tensor product rules in 2D and 3D) tabulated up to 44th-order to high precision, best available rules for triangles and tetrahedra to very high order, best available monomial rules for quadrilaterals and hexahedra.
|
| Gauss-Legendre (1D and tensor product rules in 2D and 3D) tabulated up to 44th-order to high precision, best available rules for triangles and tetrahedra to very high order, best available monomial rules for quadrilaterals and hexahedra.
|
|
|-
| Transient problems:
| Yes
| Yes, Newmark, HHT, Alpha Method
| Yes, BDF, Runge-Kutta (RK34, Cash-Karp 5, Dormand-Prince 5), and generalized alpha time stepping
| Runge-Kutta, SSP, SDIRK, Adams-Bashforth, Adams-Moulton, Symplectic Integration Algorithm, Newmark method, Generalized-alpha method
|
| Any user implemented and/or from a set of predifined. Explicit methods: forward Euler, 3rd and 4th order Runge-Kutta. Implicit methods: backward Euler, implicit Midpoint, Crank-Nicolson, SDIRK. Embedded explicit methods: Heun-Euler, Bogacki-Shampine, Dopri, Fehlberg, Cash-Karp.
| Yes
|
| Yes
| implicit-euler explicit-euler crank-nicolson bdf2 explicit-midpoint dirk explicit-tvd-rk-2 newmark-beta
|
|
| BE, CN, and Fractional-Step-Theta schemes
|
|-
| Predifined equations:
| Yes (mechanics, thermics, acoustics)
| heat transfer, linear elasticity, electromagnetics, pressure acoustics, fluid-structure interaction.
| Incompressible Navier-Stokes, heat transfer, convection-diffusion-reaction, linear elasticity, electromagnetics, pressure acoustics, Darcy&#8217;s law, and support for custom PDE equations A lot more via add-on modules.
| Miniapps and examples for Laplace, elasticity, Maxwell, Darcy, advection, Euler, Helmholtz, and others
|
| Laplace?
| Helmholtz
| Around 50 predefined solvers
| Yes (Incompressible Navier-Stokes, Heat transfer (convection-conduction-radiation), Stress analysis, Soft body dynamics, Modal analysis, Electrostatics, Magnetostatics )
| Phase Field, Solid Mechanics, Navier-Stokes, Porous Flow, Level Set, Chemical Reactions, Heat Conduction, support for custom PDEs
|
| No
| Incompressible Navier-Stokes, Heat transfer, convection-diffusion-reaction, linear elasticity, electromagnetics, Darcy's, Brinkman equations, and support for custom PDE equations
|
|-
| Automated assembly:
| Yes
|
|
|
| Yes
|
|
|
| Yes
|
| Yes
|
| Yes
| Yes
|-
| Visualization:
| Paraview (Salome-Meca)
| Built-in
| Built-in
| In situ visualization with GLVis. Export to VisIt and ParaView.
| External or with the Scilab/Matlab/Python interface. Possibility to perform complex slices.
| External (export to *.vtk and many others)
| Built-in
| ElmerGUI comes VTK based visualization tool (but Paraview is recommended)
| GUI (built-in)
| Yes, VTK-based GUI, Python visualizatuion library
| Buil-in simple plotting + External
| No
| Built-in with optional Plotly and GMV export
| External
|-
| Output format:
| MED, ASCII
| Text, PNG, GIF, JPEG, XLSX, Microsoft PowerPoint (for images). GIF, MP4, Windows Media
| Text and unstructured VTK-file for data.BMP,PNG, GIF, TIFF, JPEG, glTF, Windows clipboard, Microsoft PowerPoint (for images). GIF, Flash, AVI, WebM (for animatios). Touchstone data (for networks).
| VisIt, ParaView (VTU), GLVis format
| vtk, gmsh, OpenDX.
| *.dx *.ucd *.gnuplot *.povray *.eps *.gmv *.tecplot *.tecplot_binary *.vtk *.vtu *.svg *.hdf5
| PNG
| Several output formats (VTU, gmsh,...)
|
| ExodusII, Xdr, etc.
| VTK(.pvd, .vtu) and XDMF/HDF5
| ExodusII, Xdr, etc.
| GMV and Plotly
| VTK(.pvd, .vtu)
|-
| Boundary elements solver:
| Yes for Soil-Structure Interaction (Miss3D)
| No
| Yes
|
| No
| Yes
| No
| Existing but without multipole acceleration (not usable for large problems)
|
|
| No
|
|
| No
|-
| Use multiple meshes:
| Yes
|
|
|
| Yes including different dimensions and taking account of any transformation.
| Yes, autorefined from same initial mesh for each variable of a coupled problem
|
| Continuity of non-conforming interfaces ensured by mortar finite elements
|
|
| Yes, including non-matching meshes
|
|
| Yes
|-
| colspan="100500" | '''Linear algebra''' 
|-
| Used libs:
| BLAS/LAPACK, MUMPS (and SCALAPACK), PETSc
| MUMPS, SPOOLES; ARPACK, BLAS, BLIS, Intel MKL, LAPACK
| MUMPS, PARDISO, SPOOLES; ARPACK, BLAS, BLIS, Intel MKL, LAPACK
| Built-in and integrated with hypre. Optional integrations with PETSc, Ginkgo, SuperLU, Suite Sparse, libCEED, and more
| SuperLU, MUMPS, Built-in.
| Built-in + Trilinos, PETSc, and SLEPc
| ARPACK, BLAS, LAPACK
| Built-in, Hypre, Trilinos, umfpack, MUMPS, Pardiso, etc. (optional)
| No
| PETSc, Trilinos, LASPack,  SLEPc
| PETSc, Trilinos/TPetra, Eigen.
| PETSc, Trilinos, LASPack,  SLEPc
| Matlab/Octave built-in (Umfpack), supports integration with the FEniCS and FeatFlow solvers
| PETSc
|-
| Iterative matrix solvers:
| GMRES, CG, GCR, CR, FGMRES (via PETSc)
| GMRES, PCG, (P-)Multigrid, Contact-Multigrid, FETI
| GMRES, FGMRES, BiCGStab, conjugate gradients, TFQMR, or any precoditioner. Algebraic and geometric multigrid. Domain decomponsition (Schwarz, Schur)
| Krylov methods (CG, MINRES, GMRES, BiCGStab)
| All Krylov
| All Krylov (CG, Minres, GMRES, BiCGStab, QMRS)
|
| Built-in Krylov solvers, Krylov and multigrid solvers from external libraries
| GMRES, CG
| LASPack serial, PETSc parallel
|
| LASPack serial, PETSc parallel
| Matlab/Octave built-in
|
|-
| Preconditioners:
| ILU, Jacobi, Simple Precision Preconditioner (via MUMPS)
| diverse
| Direct preconditioner, Krylov, SOR, SSOR, SORU, SOR line, SOR gauge, SOR vector, Jacobi, incomplete and hierarchical LU, SAI, SCGS, Vanka, AMS
| Algebraic, Geometric, and p-multigrid. Block ILU preconditioning. Support for hypre's AMS and ADS preconditioners for H(curl) and H(div).
| Basic ones (ILU, ILUT)
| Many, including algebraic multigrid (via Hypre and ML) and geometric multigrid
|
| Built-in preconditioners (ILU, diagonal, vanka, block) and
| ILU, Jacobi
| LASPack serial, PETSc parallel, algebraic multigrid (via Hypre)
|
| LASPack serial, PETSc parallel
| Matlab/Octave built-in
|
|-
| colspan="100500" | '''Matrix-free''' 
|-
| matrix-free:
| No
| Yes
| Yes
| Yes
| No
| Yes
| No
| Experimental implementation
| No
|
|
|
|
| Yes
|-
| matrix-free save memory:
| No
|
|
| Yes
| No
| Yes
|
|
| No
|
|
|
|
|
|-
| matrix-free speed-up:
| No
|
|
| Yes
| No
| Yes
|
|
| No
|
|
|
|
|
|-
| colspan="100500" | '''Used language''' 
|-
| Native language:
| Fortran 90, Python
| Primarily Fortran and C++ , Python
| Primarily C++ and Java
| C++
| C++
| C++
| C++
| Fortran (2008 standard)
| C++
| C++
| C++
| C++
| Matlab / Octave
| Python (and generated C)
|-
| Bindings to language:
| Python
| Fortran, C, Python
| Full API for Java and Matlab (the latter via add-on product)
| PyMFEM
| Python, Scilab or Matlab
| No
| Lua
|
| No
|
| Python
|
|
|
|-
| colspan="100500" | '''Other''' 
|-
| Predefined equations:
| linear quasistatics, linear thermics, non-linear quasistatics, non-linear dynamics, eigen problem for mechanics, linear dynamics on physical basis and modal basis, harmonic analysis, spectral analysis
| Yes, many predefined physics
| Yes, many predefined physics and multiphysics interfaces in COMSOL Multiphysics and its add-ons.
| A large number of Bilinear and Linear forms
| Model bricks: Laplace, linear and nonlinear elasticity, Helmholtz, plasticity, Mindlin and K.L. plates, boundary conditions including contact with friction.
|
| No
|
|
|
|
|
|
|
|-
| Coupled nonlinear problems:
| thermo-hydro-mechanical problem for porous media, coupling with Code_Saturne CFD software for Fluid-Structure Interaction via SALOME platform
| Yes
| Yes
| Yes
| Yes
|
| No
|
|
|
|
|
|
|
|-
| Binary:
| Yes for Salome-Meca (Linux)
| Windows, Linux
| Windows, Linux, macOS
| Yes, via OpenHPC. Also available as part of Spack, xSDK, E4S, FASTMath, RADIUSS and CEED.
| Linux (Debian/Ubuntu)
| Linux, Windows (work in progress), Mac
| Windows, Linux, macOS
| Windows, Linux (launchpad: Debian/Ubuntu), Mac (homebrew) (all with MPI)
|
|
| Linux (Debian\Ubuntu), Mac
|
| Windows, Linux, Mac
| No. Automated installers for Linux and Mac
|-
| Testing:
| More than 3500 verification testcases covering all features and providing easy starting points for beginners
| More than 6000 regular QA tests
| 
| Comprehensive unit and regression tests. Continuous integration through Travis CI
|
| 3500+ tests
|
| More than 700 consistency tests ensuring backward compatibility
|
| 4300+ tests, Testing as a service for derived applications
|
|
|
|
|-
| fullname:
| Analyse des Structures et Thermo-mécanique pour des Études et des Recherches (ASTER)
|
|
|
|
|
|
| Elmer finite element software
|
|
|
|
|
|
|-
| scripting:
|
| Python
| Full API for Java and, through add-on product, Matlab
|
|
|
| Lua
|
|
| Runtime parsed mathematical expression in input files
|
|
| Fully scriptable in as m-file Matlab scripts and the GUI supports exporting models in script format
|
|-
| automatic differentiation:
|
| Yes
| Yes
|
|
|
| Yes
|
|
| Forward-mode for Jacobian computation, symbolic differentiation capabilities
|
|
|
|
|-
| multiphysics:
|
| Yes, full custom and predefined multiphysics couplings between all kinds of physics
| Yes, full custom and predefined multiphysics couplings between all kinds of physics
| Arbitrary multiphysics couplings are supported
|
|
| No
|
|
| Arbitrary multiphysics couplings are supported
|
|
| Arbitrary multiphysics couplings are supported
|
|-
| Optimization Solvers:
|
| Adaptive Monte Carlo, Latin Hypercube Sampling, Response surface, SCP, SLP, SQP, ACP, COBYLA, GCA, MS (multistart), OC (optimality criteria) , WLIN, dividing rectangle, design centering
| With the Optimization Module add-on: Coorinate search, Nelder-Mead, Monte Carlo, BOBYQA, COBYLA, SNOPT, MMA, Levenberg-Marquardt
| Integration with HiOp. Built-in SLBQP optimizer
|
|
| Levenberg-Marquardt, Subspace dogleg
|
|
| Support for TAO- and nlopt-based constrained optimization solvers incorporating gradient and Hessian information.
|
| Support for TAO- and nlopt-based constrained optimization solvers incorporating gradient and Hessian information.
|
|
|-
| HIP:
|
|
|
| Yes
|
|
|
|
|
|
|
|
|
|
|-
| Symbolic derivation of the tangent system for nonlinear problems:
|
|
|
|
| Yes
|
|
|
|
|
|
|
|
|
|-
| Support for fictitious domain methods:
|
|
|
|
| Yes
|
|
|
|
|
|
|
|
|
|-
| Wilkinson Prize:
|
|
|
|
|
| 2007
|
|
|
|
| 2015 for dolfin-adjoint
|
|
|
|}
