
** Overview
 This is an [[https://github.com/kostyfisik/FEA-compare][auto generated comparison]] from manually filled `*.profiles` for FEA software. It is also available in HTML format [[https://cdn.rawgit.com/kostyfisik/FEA-compare/3f7987b32eb01926932a32aa2826c17c112ab5a3/table.html][preview 1]] (fast and correct rendering of html table from previous commit), [[http://htmlpreview.github.io/?https://github.com/kostyfisik/FEA-compare/blob/master/table.html][preview 2]] (a bit slow, had problems with Firefox, usually current commit) with first row and *Feature* column being fixed for ease of table exploration. Profiles in table are sorted with the number of filled keys.

** Profile format
 Profile is read line-by-line.  Any string before colon ':' is treated as a key, the other part till the end of the line as value. Lines without colon are ignored, comments should start with hash '#' in the begging of the line.  main-keys.txt file contains keys in order to be listed first, all other keys from all profiles are lister afterwards. Key are always carried with colon, table group names are not (for visual ease they are four spaces indented).
Use generate-comparison.py to generate a table from profiles, you will need to install `org-ruby` gem to convert it into HTML format (use `sudo gem install org-ruby` in Ubuntu linux to install this gem). 

** Contribution
 Fill free to contribute! There is still a lot of codes, not compared it the table, e.g: NgSolve, CalculiX and SalomÃ© + Code_Saturne, ANSYS, NASTRAN, CFD-ACE+, COSMOSWORKS. Comsol(R) description is poor. 

|Feature|code_aster|COMSOL(R)|GetFEM++|Deal II|Rama Simulator|MFEM|Range|Elmerfem|MOOSE|libMesh|FEniCS|FEATool Multiphysics|Firedrake|
|--+--+--+--+--+--+--+--+--+--+--+--+--+--|
|website:|[[https://www.code-aster.org][https://www.code-aster.org]]|[[https://www.comsol.com][https://www.comsol.com]]|[[http://home.gna.org/getfem/][http://home.gna.org/getfem/]]|[[http://www.dealii.org][http://www.dealii.org]]|[[http://ramasimulator.org][http://ramasimulator.org]]|[[https://mfem.org/][https://mfem.org/]]|[[http://www.range-software.com][http://www.range-software.com]]|[[https://www.csc.fi/elmer][https://www.csc.fi/elmer]]|[[https://www.mooseframework.org/][https://www.mooseframework.org/]]|[[http://libmesh.github.io/][http://libmesh.github.io/]]|[[http://fenicsproject.org/][http://fenicsproject.org/]]|[[https://www.featool.com/][https://www.featool.com/]]|[[http://firedrakeproject.org/][http://firedrakeproject.org/]]|
|license:|GPL|Proprietary|LGPL|LGPL|GPL|BSD 3-Clause License|GPL|GNU (L)GPL|LGPL|LGPL|GNU GPL\LGPL|Proprietary|GNU LGPL|
|GUI:|Yes (Salome-Meca)|Yes|No|No|Yes|No|Yes|Yes, partial functionality|Yes|No|Postprocessing only|Matlab and Octave GUI|No|
|Community:|discussion forum, Bitbucket forge|[[https://www.comsol.com/forum][https://www.comsol.com/forum]]|Mailing list|[[https://groups.google.com/forum/#!forum/dealii][Google Group]]|[[https://github.com/Evenedric/stuff][https://github.com/Evenedric/stuff]]|[[https://github.com/mfem/mfem][GitHub Repository]]|GitHub|1000's of users, discussion forum, mailing list, [[https://discordapp.com/invite/NeZEBZn][Discord server]]|[[https://groups.google.com/forum/#!forum/moose-users][Google Group]]|[[http://sourceforge.net/p/libmesh/mailman/][mail lists]]|Mailing list|Mailing list|Mailing list and IRC channel|
|Documentation:|user manual, theory manual, verification manual, developer manual (more than 25000 pages both in French and English with machine translation)|User guides, reference manuals, API documentation, application libraries with solved examples, online tutorials|User doc, tutorials, demos, developer's guide|50+ tutorials, 50+ video lectures, Doxygen|User guide, reference manual, API documentation, examples, tutorials|26 examples, 17 miniapps, Doxygen, [[https://mfem.org][online documentation]]|user manual, tutorials|ElmerSolver Manual, Elmer Models Manual, ElmerGUI Tutorials, etc. (>700 pages of LaTeX documentation available in PDFs)|Doxygen, Markdown, 170+ example codes, 4300+ test inputs|Doxygen, 100+ example codes|Tutorial, demos (how many?), 700-page book|[[https://www.featool.com/doc][Online FEATool documentation]], ~600 pages, ~20 step-by-step tutorials, and 85 m-script model examples|Manual, demos, API reference|
| *Mesh* 
|mesh elements:|segments (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)|Intervals (1D); triangles, quadrilaterals (2D and 3D boundaries); tetrahedra, pyramids, prisms, hexahedra (3d)|intervals, triangles, tetrahedra, quads, hexes, prisms, some 4D elements, easily extensible.|intervals (1d), quads (2d), and hexes (3d) only|triangles|segments, triangles, quadrilaterals, tetrahedra, hexahedra, prisms|points(0d), segments (1d), triangles, quadrilaterals (2d), tetrahedra, hexahedra (3d)|intervals (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)|Tria, Quad, Tetra, Prism, etc.|Tria, Quad, Tetra, Prism, etc.|intervals, triangles, tetrahedra (quads, hexes - work in progress)|intervals, triangles, tetrahedra, quads, hexes|intervals, triangles, tetrahedra, quads, plus extruded meshes of hexes and wedges|
|mesh high-order mapping:|Quadratic|Any? [[https://www.comsol.com/blogs/keeping-track-of-element-order-in-multiphysics-models/][ Second-order is the default for most cases.]]|  |[[http://dealii.org/developer/doxygen/deal.II/step_10.html][any order]]|No|arbitrary-order meshes and NURBS meshes|  |Yes, for Lagrange elements|  |  |(Any - work in progress)|  |(Any - using appropriate branches)|
|mesh generation:|Yes (Salome-Meca)|Built-in|Experimental in any dimension + predefined shapes + Extrusion.|external+predefined shapes|Built-in|meshing miniapps and target-matrix mesh optimization|Yes (TetGen)|Limited own meshing capabilities with ElmerGrid and netgen/tetgen APIs. Internal extrusion and mesh multiplication on parallel level.|Built-in|Built-in|Yes, [[http://fenicsproject.org/documentation/dolfin/1.4.0/python/demo/documented/csg-2D/python/documentation.html][Constructive Solid Geometry (CSG)]] supported via mshr (CGAL and Tetgen used as backends)|Integrated DistMesh, Gmsh, and Triangle GUI and CLI interfaces|External + predefined shapes. Internal mesh extrusion operation.|
|mesh adaptive-refinement:|h-refinement|Yes, full adaptive mesh refinement (h-refinement); no p-refinement but several higher-order elements are included. Mesh adaptation on the whole or parts of the geometry, for stationary, eigenvalue, and time-dependent simulations and by rebuilding the entire mesh or refining chosen mesh elements.|Only h|h, p, and hp for CG and DG|No|conforming and non-conforming adaptive refinement for tensor product and simplex meshes|  |h-refinement for selected equations|h, p, mached hp, singular hp|h, p, mached hp, singular hp|Only h|  |  |
|mesh input\output:|unv, gmsh, MED, aster|STL, PLY, NASTRAN, 3MF, VRML (import only), native format|gmsh, GiD, Ansys|  |Matlab|VTK, Gmsh, CUBIT, NETGEN, TrueGrid, and MFEM format|rbm, stl|  |ExodusII, Nemesis, Abaqus, Ensight, Gmsh, GMV, OFF, TecPlot TetGen, etc.|ExodusII, Nemesis, Abaqus, Ensight, Gmsh, GMV, OFF, TecPlot TetGen, etc.|XDMF (and FEniCS XML)|FeatFlow, FEniCS XML, GiD, Gmsh, GMV, Triangle|  |
|mesh check:|limited features (double nodes, degenerated elements)|Avoids inverted and degenerated elements; various mesh quality measures|?|  |Avoids degenerate elements|  |limited features (double nodes, degenerated elements, intersected elements)|  |  |  |intersections (collision testing)|  |  |
|CAD files support:|Yes (Salome-Meca)|STEP, IGES and [[https://www.comsol.com/cad-import-module][many others]].|No|IGES, STEP (with [[https://dealii.org/developer/doxygen/deal.II/group__OpenCASCADE.html][OpenCascade wrapper]])|DXF|  |Yes (stl)|Limited support via OpenCASCADE in ElmerGUI|  |  |  |  |  |
|mesh operation:|Yes (Salome-Meca)|Merge, copy, refine; convert; boundary layers; extrude, revolve, sweep, loft for 3D geometies|Extrude, rotate, translation, refine|  |Union, difference, intersection, refine|  |Extrude, rotate, translation, refine|  |Merge, join, extrude, modular mesh modifier system|distort/translate/rotate/scale|  |Merge, join, extrude, and revolve operations|  |
| *Parallel possibilities* 
|automatic mesh partitioning:|Yes for parallel calculations (PTScotch, ParMetis)|  |Yes (METIS)|yes, shared (METIS/Parmetis) and distributed (p4est)|  |METIS and space-filling curve partitioning|No|partitioning with ElmerGrid using Metis or geometric division, internal partitioning in ElmerSolver using Zoltan|Metis, Parmetis, Hilbert (shared and distributed meshes)|Metis, Parmetis, Hilbert|Yes (ParMETIS and SCOTCH)|  |Yes|
|MPI:|Yes|Almost ideal for parameter sweep? For large scale simulations  Comsol 4.2 [[https://www.comsol.ru/paper/download/83777/pepper_presentation.pdf][bench by Pepper]] has 19.2 speedup on 24 core cluster (0.8 efficiency).|Yes|Yes (up to 147k processes), test for [[http://dealii.org/developer/doxygen/deal.II/step_40.html#Results][4k processes]] and [[https://www.dealii.org/deal85-preprint.pdf][geometric multigrid for 147k, strong and weak scaling]]|  |Yes|No|Yes, demonstrated scalability up to 1000's of cores|Yes|Yes|Yes, [[http://figshare.com/articles/Parallel_scaling_of_DOLFIN_on_ARCHER/1304537][DOLFIN solver scales up to 24k]]|  |Yes, [[https://github.com/firedrakeproject/firedrake/wiki/Gravity-wave-scaling][Scaling plot for Firedrake out to 24k cores.]]|
|threads:|Yes|Supports multithreading|  |Threading Build Blocks|Supports multithreading|Using OpenMP, RAJA, or OCCA backends|Yes|threadsafe, some modules threaded and vectorized.|Yes|Yes|  |  |  |
|OpenMP:|Yes|Yes|Yes|Yes (vectorization only)|No|Yes|Yes|Yes, partially|Yes|Yes|  |  |Limited|
|OpenCL:|No|No|No|No|No|Through OCCA backends|No|No|  |  |  |  |  |
|CUDA:|No|No|No|since 9.1, see [[https://www.dealii.org/developer/doxygen/deal.II/step_64.html][step-64]] for matrix-free GPU+MPI example|No|Yes|No|Preliminary API for sparse linear algebra|  |  |  |  |  |
| *Solver* 
|Dimension:|0D/1D/2D/3D (dimensions may coexist)|0D, 1D, 2D, 3D (can coexist)|Any, possibility to mix and couple problem of different dimension|1/2/3D|2D|1D/2D/3D|0D/1D/2D/3D (dimensions may coexist)|1D/2D/3D (dimensions may coexist)|1/2/3D|2D\3D|1/2/3D|1/2/3D|1/2/3D|
|FE:|Lagrange elements (isoparametric), mixed elements, structural mechanics elements (beam, plate)|Lagrange (order 1-7), Hermite (order 3-7), discontinuous Lagrange (order 0-7), bubble, Gauss point, serendipity, Nedelec|Continuous and discontinuous Lagrange, Hermite, Argyris, Morley, Nedelec, Raviart-Thomas, composite elements (HCT, FVS), Hierarchical elements, Xfem, easily extensible.|Lagrange elements of any order, continuous and discontinuous; Nedelec and Raviart-Thomas elements of any order; BDM and Bernstein; elements composed of other elements.|Lagrange elements|Arbitrary-order Lagrange elements (continuous and discontinuous), Bernstein basis, Nedelec and Raviart-Thomas elements, support for NURBS spaces (IGA)|Lagrange elements|Lagrange elements, p-elements up to 10th order, Hcurl conforming elements (linear and quadratic) for|Lagrange, Hierarchic, Discontinuous Monomials, Nedelec|Lagrange, Hierarchic, Discontinuous Monomials, Nedelec|Lagrange, BDM, RT, Nedelic, Crouzeix-Raviart, all simplex elements in the Periodic Table (femtable.org), any|Lagrange (1st-5th order), Crouzeix-Raviart, Hermite|Lagrange, BDM, RT, Nedelec, all simplex elements and Q- quad elements in the [[http://femtable.org][Periodic Table]], any|
|Quadrature:|depending on the type of element (Gauss, Newton-Cotes, etc)|  |  |Gauss-Legendre, Gauss-Lobatto, midpoint, trapezoidal,  Simpson, Milne and Weddle (closed Newton-Cotes for 4 and 7 order polinomials), Gauss quadrature with logarithmic or 1/R weighting function, Telles quadrature of arbitrary order.|  |Gauss-Legendre, Gauss-Lobatto, and uniform quadrature rules.|  |  |Gauss-Legendre (1D and tensor product rules in 2D and 3D) tabulated up to 44th-order to high precision, best available rules for triangles and tetrahedra to very high order, best available monomial rules for quadrilaterals and hexahedra.|Gauss-Legendre (1D and tensor product rules in 2D and 3D) tabulated up to 44th-order to high precision, best available rules for triangles and tetrahedra to very high order, best available monomial rules for quadrilaterals and hexahedra.|  |  |  |
|Transient problems:|Yes|Yes, BDF, Runge-Kutta (RK34, Cash-Karp 5, Dormand-Prince 5), and generalized alpha time stepping|  |Any user implemented and/or from a set of predifined. Explicit methods: forward Euler, 3rd and 4th order Runge-Kutta. Implicit methods: backward Euler, implicit Midpoint, Crank-Nicolson, SDIRK. Embedded explicit methods: Heun-Euler, Bogacki-Shampine, Dopri, Fehlberg, Cash-Karp.|Yes|Runge-Kutta, SSP, SDIRK, Adams-Bashforth, Adams-Moulton, Symplectic Integration Algorithm, Newmark method, Generalized-alpha method|Yes|  |implicit-euler explicit-euler crank-nicolson bdf2 explicit-midpoint dirk explicit-tvd-rk-2 newmark-beta|  |  |BE, CN, and Fractional-Step-Theta schemes|  |
|Predifined equations:|Yes (mechanics, thermics, acoustics)|Incompressible Navier-Stokes, heat transfer, convection-diffusion-reaction, linear elasticity, electromagnetics, pressure acoustics, Darcy&#8217;s law, and support for custom PDE equations A lot more via add-on modules.|  |Laplace?|Helmholtz|Miniapps and examples for Laplace, elasticity, Maxwell, Darcy, advection, Euler, Helmholtz, and others|Yes (Incompressible Navier-Stokes, Heat transfer (convection-conduction-radiation), Stress analysis, Soft body dynamics, Modal analysis, Electrostatics, Magnetostatics )|Around 50 predefined solvers|Phase Field, Solid Mechanics, Navier-Stokes, Porous Flow, Level Set, Chemical Reactions, Heat Conduction, support for custom PDEs|No|  |Incompressible Navier-Stokes, Heat transfer, convection-diffusion-reaction, linear elasticity, electromagnetics, Darcy's, Brinkman equations, and support for custom PDE equations|  |
|Automated assembly:|Yes|  |Yes|  |  |  |Yes|  |  |  |Yes|Yes|Yes|
|Visualization:|Paraview (Salome-Meca)|Built-in|External or with the Scilab/Matlab/Python interface. Possibility to perform complex slices.|External (export to *.vtk and many others)|Built-in|In situ visualization with [[GLVis][https://glvis.org]]. Export to VisIt and ParaView.|GUI (built-in)|ElmerGUI comes VTK based visualization tool (but Paraview is recommended)|Yes, VTK-based GUI, Python visualizatuion library|No|Buil-in simple plotting + External|Built-in with optional Plotly and GMV export|External|
|Output format:|MED, ASCII|Text and unstructured VTK-file for data.BMP,PNG, GIF, TIFF, JPEG, glTF, Windows clipboard, Microsoft PowerPoint (for images). GIF, Flash, AVI, WebM (for animatios). Touchstone data (for networks).|vtk, gmsh, OpenDX.|*.dx *.ucd *.gnuplot *.povray *.eps *.gmv *.tecplot *.tecplot_binary *.vtk *.vtu *.svg *.hdf5|PNG|VisIt, ParaView (VTU), GLVis format|  |Several output formats (VTU, gmsh,...)|ExodusII, Xdr, etc.|ExodusII, Xdr, etc.|VTK(.pvd, .vtu) and XDMF/HDF5|GMV and Plotly|VTK(.pvd, .vtu)|
|Boundary elements solver:|Yes for Soil-Structure Interaction (Miss3D)|Yes|No|[[https://www.dealii.org/developer/doxygen/deal.II/step_34.html][Yes]]|No|  |  |Existing but without multipole acceleration (not usable for large problems)|  |  |No|  |No|
|Use multiple meshes:|Yes|  |Yes including different dimensions and taking account of any transformation.|[[http://dealii.org/developer/doxygen/deal.II/step_28.html#Meshesandmeshrefinement][Yes, autorefined from same initial mesh for each variable of a coupled problem]]|  |  |  |Continuity of non-conforming interfaces ensured by mortar finite elements|  |  |Yes, including non-matching meshes|  |Yes|
| *Linear algebra* 
|Used libs:|BLAS/LAPACK, MUMPS (and SCALAPACK), PETSc|MUMPS, PARDISO, SPOOLES; ARPACK, BLAS, BLIS, Intel MKL, LAPACK|SuperLU, MUMPS, Built-in.|Built-in + Trilinos, PETSc, and SLEPc|ARPACK, BLAS, LAPACK|Built-in and integrated with hypre. Optional integrations with PETSc, Ginkgo, SuperLU, Suite Sparse, libCEED|No|Built-in, Hypre, Trilinos, umfpack, MUMPS, Pardiso, etc. (optional)|PETSc, Trilinos, LASPack,  SLEPc|PETSc, Trilinos, LASPack,  SLEPc|PETSc, Trilinos/TPetra, Eigen.|Matlab/Octave built-in (Umfpack), supports integration with the FEniCS and FeatFlow solvers|PETSc|
|Iterative matrix solvers:|GMRES, CG, GCR, CR, FGMRES (via PETSc)|GMRES, FGMRES, BiCGStab, conjugate gradients, TFQMR, or any precoditioner. Algebraic and geometric multigrid. Domain decomponsition (Schwarz, Schur)|All Krylov|All Krylov (CG, Minres, GMRES, BiCGStab, QMRS)|  |Krylov methods (CG, MINRES, GMRES, BiCGStab)|GMRES, CG|Built-in Krylov solvers, Krylov and multigrid solvers from external libraries|LASPack serial, PETSc parallel|LASPack serial, PETSc parallel|  |Matlab/Octave built-in|  |
|Preconditioners:|ILU, Jacobi, Simple Precision Preconditioner (via MUMPS)|Direct preconditioner, Krylov, SOR, SSOR, SORU, SOR line, SOR gauge, SOR vector, Jacobi, incomplete and hierarchical LU, SAI, SCGS, Vanka, AMS|Basic ones (ILU, ILUT)|Many, including algebraic multigrid (via Hypre and ML) and geometric multigrid|  |Algebraic, geometric, and p-multigrid. Block ILU preconditioning. Support for hypre's AMS and ADS preconditioners for H(curl) and H(div).|ILU, Jacobi|Built-in preconditioners (ILU, diagonal, vanka, block) and|LASPack serial, PETSc parallel, algebraic multigrid (via Hypre)|LASPack serial, PETSc parallel|  |Matlab/Octave built-in|  |
| *Matrix-free* 
|matrix-free:|No|Yes|No|Yes|No|Yes|No|Experimental implementation|  |  |  |  |Yes|
|matrix-free save memory:|No|  |No|Yes|  |Yes|No|  |  |  |  |  |  |
|matrix-free speed-up:|No|  |No|[[https://www.dealii.org/developer/doxygen/deal.II/step_37.html#Comparisonwithasparsematrix][Yes]]|  |Yes|No|  |  |  |  |  |  |
| *Used language* 
|Native language:|Fortran 90, Python|Primarily C++ and Java|C++|C++|C++|C++|C++|Fortran (2008 standard)|C++|C++|C++|Matlab / Octave|Python (and generated C)|
|Bindings to language:|Python|Full API for Java and Matlab (the latter via add-on product)|Python, Scilab or Matlab|No|Lua|[[https://github.com/mfem/PyMFEM][PyMFEM]]|No|  |  |  |Python|  |  |
| *Other* 
|Predefined equations:|linear quasistatics, linear thermics, non-linear quasistatics, non-linear dynamics, eigen problem for mechanics, linear dynamics on physical basis and modal basis, harmonic analysis, spectral analysis|Yes, many predefined physics and multiphysics interfaces in COMSOL Multiphysics and its add-ons.|Model bricks: Laplace, linear and nonlinear elasticity, Helmholtz, plasticity, Mindlin and K.L. plates, boundary conditions including contact with friction.|  |No|  |  |  |  |  |  |  |  |
|Coupled nonlinear problems:|thermo-hydro-mechanical problem for porous media, coupling with Code_Saturne CFD software for Fluid-Structure Interaction via SALOME platform|Yes|Yes|  |No|  |  |  |  |  |  |  |  |
|Binary:|Yes for Salome-Meca (Linux)|Windows, Linux, macOS|Linux (Debian/Ubuntu)|Linux, Windows (work in progress), Mac|Windows, Linux, macOS|  |  |Windows, Linux (launchpad: Debian/Ubuntu), Mac (homebrew) (all with MPI)|  |  |Linux (Debian\Ubuntu), Mac|Windows, Linux, Mac|No. Automated installers for Linux and Mac|
|Testing:|More than 3500 verification testcases covering all features and providing easy starting points for beginners|[[https://www.comsol.com/legal/quality-policy][https://www.comsol.com/legal/quality-policy]]|  |[[https://dealii.org/developer/developers/testsuite.html][3500+ tests]]|  |Comprehensive unit and regression tests. Continuous integration through [[https://travis-ci.com/github/mfem/mfem][Travis CI]]|  |More than 700 consistency tests ensuring backward compatibility|[[https://civet.inl.gov/][4300+ tests]], Testing as a service for derived applications|  |  |  |  |
|fullname:|Analyse des Structures et Thermo-mÃ©canique pour des Ãtudes et des Recherches (ASTER)|  |  |  |  |  |  |Elmer finite element software|  |  |  |  |  |
|scripting:|  |Full API for Java and, through add-on product, Matlab|  |  |Lua|  |  |  |Runtime parsed mathematical expression in input files|  |  |Fully scriptable in as m-file Matlab scripts and the GUI supports exporting models in script format|  |
|automatic differentiation:|  |Yes|  |  |Yes|  |  |  |Forward-mode for Jacobian computation, symbolic differentiation capabilities|  |  |  |  |
|multiphysics:|  |Yes, full custom and predefined multiphysics couplings between all kinds of physics|  |  |No|  |  |  |Arbitrary multiphysics couplings are supported|  |  |Arbitrary multiphysics couplings are supported|  |
|Optimization Solvers:|  |With the Optimization Module add-on: Coorinate search, Nelder-Mead, Monte Carlo, BOBYQA, COBYLA, SNOPT, MMA, Levenberg-Marquardt|  |  |Levenberg-Marquardt, Subspace dogleg|Integration with HiOp. Built-in SLBQP optimizer|  |  |Support for TAO- and nlopt-based constrained optimization solvers incorporating gradient and Hessian information.|Support for TAO- and nlopt-based constrained optimization solvers incorporating gradient and Hessian information.|  |  |  |
|Symbolic derivation of the tangent system for nonlinear problems:|  |  |Yes|  |  |  |  |  |  |  |  |  |  |
|Support for fictitious domain methods:|  |  |Yes|  |  |  |  |  |  |  |  |  |  |
|Wilkinson Prize:|  |  |  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2007]]|  |  |  |  |  |  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2015 for dolfin-adjoint]]|  |  |
